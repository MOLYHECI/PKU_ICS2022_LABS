                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4a004000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f6f803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7c003000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # Zimo Meng 2100017702
                            | #
                            | # Describe how and why you modified the baseline code.
                            | # 采用9路循环展开方法，在循环展开中通过提前读取方法消除数据依赖
                            | # 而对于余数的处理采用三叉树搜索的方法进行跳转，通过将指令后移的方法减少数据依赖带来的影响
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032:                      | test10:
0x032: c0f2f7ffffffffffffff | 	iaddq $-9,%rdx
0x03c: 72dd01000000000000   | 	jl Root
0x045:                      | Loop9:
0x045: 50974000000000000000 | 	mrmovq 64(%rdi),%r9
0x04f: 50873800000000000000 |     mrmovq 56(%rdi),%r8
0x059: 40964000000000000000 |     rmmovq %r9,64(%rsi)
0x063: 6299                 | 	andq %r9,%r9
0x065: 717800000000000000   |     jle Loop8
0x06e: c0f00100000000000000 |     iaddq $1,%rax
0x078:                      | Loop8:
0x078: 50973000000000000000 | 	mrmovq 48(%rdi),%r9
0x082: 40863800000000000000 |     rmmovq %r8,56(%rsi)
0x08c: 6288                 | 	andq %r8,%r8
0x08e: 71a100000000000000   | 	jle Loop7
0x097: c0f00100000000000000 | 	iaddq $1,%rax
0x0a1:                      | Loop7:
0x0a1: 50872800000000000000 | 	mrmovq 40(%rdi),%r8
0x0ab: 40963000000000000000 | 	rmmovq %r9,48(%rsi)
0x0b5: 6299                 | 	andq %r9,%r9
0x0b7: 71ca00000000000000   | 	jle Loop6
0x0c0: c0f00100000000000000 | 	iaddq $1,%rax
0x0ca:                      | Loop6:
0x0ca: 50972000000000000000 | 	mrmovq 32(%rdi),%r9
0x0d4: 40862800000000000000 |     rmmovq %r8,40(%rsi)
0x0de: 6288                 | 	andq %r8,%r8
0x0e0: 71f300000000000000   | 	jle Loop5
0x0e9: c0f00100000000000000 | 	iaddq $1,%rax
0x0f3:                      | Loop5:
0x0f3: 50871800000000000000 | 	mrmovq 24(%rdi),%r8
0x0fd: 40962000000000000000 |     rmmovq %r9,32(%rsi)
0x107: 6299                 | 	andq %r9,%r9
0x109: 711c01000000000000   | 	jle Loop4
0x112: c0f00100000000000000 | 	iaddq $1,%rax
0x11c:                      | Loop4:
0x11c: 50971000000000000000 | 	mrmovq 16(%rdi),%r9
0x126: 40861800000000000000 | 	rmmovq %r8,24(%rsi)
0x130: 6288                 | 	andq %r8,%r8
0x132: 714501000000000000   | 	jle Loop3
0x13b: c0f00100000000000000 | 	iaddq $1,%rax
0x145:                      | Loop3:
0x145: 50870800000000000000 |     mrmovq 8(%rdi),%r8
0x14f: 40961000000000000000 | 	rmmovq %r9,16(%rsi)
0x159: 6299                 | 	andq %r9,%r9
0x15b: 716e01000000000000   | 	jle Loop2
0x164: c0f00100000000000000 | 	iaddq $1,%rax
0x16e:                      | Loop2:
0x16e: 50970000000000000000 | 	mrmovq (%rdi),%r9
0x178: 40860800000000000000 | 	rmmovq %r8,8(%rsi)
0x182: 6288                 | 	andq %r8,%r8
0x184: 719701000000000000   | 	jle Loop1
0x18d: c0f00100000000000000 | 	iaddq $1,%rax
0x197:                      | Loop1:
0x197: 40960000000000000000 | 	rmmovq %r9,(%rsi)
0x1a1: 6299                 | 	andq %r9,%r9
0x1a3: 71b601000000000000   | 	jle Npos
0x1ac: c0f00100000000000000 | 	iaddq $1,%rax
0x1b6:                      | Npos:
0x1b6: c0f74800000000000000 | 	iaddq $72,%rdi
0x1c0: c0f64800000000000000 | 	iaddq $72,%rsi
0x1ca: c0f2f7ffffffffffffff | 	iaddq $-9,%rdx
0x1d4: 754500000000000000   | 	jge Loop9
0x1dd:                      | Root:
0x1dd: c0f20700000000000000 | 	iaddq $7,%rdx
0x1e7: 761602000000000000   | 	jg Right
0x1f0: 720202000000000000   | 	jl Left
0x1f9: 735603000000000000   | 	je Rest2
0x202:                      | Left:
0x202: c0f20100000000000000 | 	iaddq $1,%rdx
0x20c: 737f03000000000000   | 	je Rest1
0x215: 90                   | 	ret
0x216:                      | Right:
0x216: c0f2fdffffffffffffff | 	iaddq $-3,%rdx
0x220: 765702000000000000   | 	jg Right2
0x229: 723b02000000000000   | 	jl Right1
0x232: 73db02000000000000   | 	je Rest5
0x23b:                      | Right1:
0x23b: c0f20100000000000000 | 	iaddq $1,%rdx
0x245: 722d03000000000000   | 	jl Rest3
0x24e: 730403000000000000   | 	je Rest4
0x257:                      | Right2:
0x257: c0f2feffffffffffffff | 	iaddq $-2,%rdx
0x261: 738902000000000000   | 	je Rest7
0x26a: 72b202000000000000   | 	jl Rest6
0x273:                      | Rest8:
0x273: 50873800000000000000 | 	mrmovq 56(%rdi),%r8
0x27d: 40863800000000000000 | 	rmmovq %r8,56(%rsi)
0x287: 6288                 | 	andq %r8,%r8
0x289:                      | Rest7:	
0x289: 50973000000000000000 | 	mrmovq 48(%rdi),%r9
0x293: 71a602000000000000   | 	jle Rest7_2
0x29c: c0f00100000000000000 | 	iaddq $1,%rax
0x2a6:                      | Rest7_2:
0x2a6: 40963000000000000000 | 	rmmovq %r9,48(%rsi)
0x2b0: 6299                 | 	andq %r9,%r9
0x2b2:                      | Rest6:
0x2b2: 50872800000000000000 | 	mrmovq 40(%rdi),%r8
0x2bc: 71cf02000000000000   | 	jle Rest6_2
0x2c5: c0f00100000000000000 | 	iaddq $1,%rax
0x2cf:                      | Rest6_2:
0x2cf: 6288                 | 	andq %r8,%r8
0x2d1: 40862800000000000000 | 	rmmovq %r8,40(%rsi)
0x2db:                      | Rest5:
0x2db: 50972000000000000000 | 	mrmovq 32(%rdi),%r9
0x2e5: 71f802000000000000   | 	jle Rest5_2
0x2ee: c0f00100000000000000 | 	iaddq $1,%rax
0x2f8:                      | Rest5_2:
0x2f8: 6299                 | 	andq %r9,%r9
0x2fa: 40962000000000000000 | 	rmmovq %r9,32(%rsi)
0x304:                      | Rest4:
0x304: 50871800000000000000 | 	mrmovq 24(%rdi),%r8
0x30e: 712103000000000000   | 	jle Rest4_2
0x317: c0f00100000000000000 | 	iaddq $1,%rax
0x321:                      | Rest4_2:
0x321: 6288                 | 	andq %r8,%r8
0x323: 40861800000000000000 | 	rmmovq %r8,24(%rsi)
0x32d:                      | Rest3:
0x32d: 50971000000000000000 | 	mrmovq 16(%rdi),%r9
0x337: 714a03000000000000   | 	jle Rest3_2
0x340: c0f00100000000000000 | 	iaddq $1,%rax
0x34a:                      | Rest3_2:
0x34a: 40961000000000000000 | 	rmmovq %r9,16(%rsi)
0x354: 6299                 | 	andq %r9,%r9
0x356:                      | Rest2:
0x356: 50870800000000000000 | 	mrmovq 8(%rdi),%r8
0x360: 717303000000000000   | 	jle Rest2_2
0x369: c0f00100000000000000 | 	iaddq $1,%rax
0x373:                      | Rest2_2:
0x373: 40860800000000000000 | 	rmmovq %r8,8(%rsi)
0x37d: 6288                 | 	andq %r8,%r8
0x37f:                      | Rest1:
0x37f: 50970000000000000000 | 	mrmovq (%rdi),%r9
0x389: 719c03000000000000   | 	jle Rest1_2
0x392: c0f00100000000000000 | 	iaddq $1,%rax
0x39c:                      | Rest1_2:
0x39c: 40960000000000000000 | 	rmmovq %r9,(%rsi)
0x3a6: 6299                 | 	andq %r9,%r9
0x3a8: 71bb03000000000000   | 	jle Done
0x3b1: c0f00100000000000000 | 	iaddq $1,%rax
                            | ##################################################################
                            |  # Do not modify the following section of code
                            | # src++
                            | # dst++
                            | #len>0?
                            | # if so, goto Loop
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x3bb:                      | Done:
0x3bb: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x3bc:                      | End:
                            | #/* $end ncopy-ys */
0x3bc:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x3c0:                      | 	.align 8
0x3c0:                      | src:
0x3c0: 0100000000000000     | 	.quad 1
0x3c8: 0200000000000000     | 	.quad 2
0x3d0: fdffffffffffffff     | 	.quad -3
0x3d8: fcffffffffffffff     | 	.quad -4
0x3e0: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x3f0:                      | 	.align 16
0x3f0:                      | Predest:
0x3f0: fadebc0000000000     | 	.quad 0xbcdefa
0x3f8:                      | dest:
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418:                      | Postdest:
0x418: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x420:                      | .align 8
                            | # Run time stack
0x420: 0000000000000000     | 	.quad 0
0x428: 0000000000000000     | 	.quad 0
0x430: 0000000000000000     | 	.quad 0
0x438: 0000000000000000     | 	.quad 0
0x440: 0000000000000000     | 	.quad 0
0x448: 0000000000000000     | 	.quad 0
0x450: 0000000000000000     | 	.quad 0
0x458: 0000000000000000     | 	.quad 0
0x460: 0000000000000000     | 	.quad 0
0x468: 0000000000000000     | 	.quad 0
0x470: 0000000000000000     | 	.quad 0
0x478: 0000000000000000     | 	.quad 0
0x480: 0000000000000000     | 	.quad 0
0x488: 0000000000000000     | 	.quad 0
0x490: 0000000000000000     | 	.quad 0
0x498: 0000000000000000     | 	.quad 0
                            | 
0x4a0:                      | Stack:
